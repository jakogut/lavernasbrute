#labels Phase-Design,Featured
#Project Description and Goals

= Introduction =

The aim of this project is to provide a free (in both senses) implementation of a brute-force password cracker. The first goal is to successfully crack a windows password of any length. After this has been completed, I can add support for GPGPU acceleration, and after that's completed, I can add support for the cracking of other passwords, such as WEP/WPA keys.

= Milestones: =

    *  Random generation of strings for use in a brute forcer    *Completed*
    *  Threading support    *Completed*

    *  Support for cracking of Windows passwords
        *  Extract LM/NTLM hashes *Completed*
        *  Re-create one-way hash function *Partial*

    *  Support for cracking of network authentication keys
        
    *  `*`NIX Support *Completed*
    *  GPGPU Acceleration (ATI/Stream)

    *  GPGPU Acceleration (Nvidia/CUDA)

= Current Speed: =
(IPS == iterations per second.)

Core 2 Duo 2.00 ghz (T7300)

All tests used a random string consisting of the full alphabetical character set, lower-case and upper-case, as well as numbers. Laverna's brute currently supports two methods of random number generation, these tests employed the Mersenne Twister method.

    * No hash-generation, four character string, 128(+1) threads. 
        * Iterations per second: N/A
        * Estimated time: Instant

    * No hash-generation, five character string, 128(+1) threads. 
        * Iterations per second: 3.6 million
        * Estimated time: < 20 seconds

    * No hash-generation, six character string, 128(+1) threads.
        * Iterations per second: 3.3 million
        * Estimated time: < 5 hours

These are informal tests. Complete accuracy is not guaranteed, but the results were estimated to the best of my ability. Results were averaged when practical, estimated time was rounded up, and iterations per second was rounded down.

These results do not show the maximum potential speed of the program, as the test machine was often times actively in use while the tests were running in the background.