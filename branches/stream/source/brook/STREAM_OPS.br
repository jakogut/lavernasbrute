//Common operators
kernel void gpu_ADD(unsigned int input0<>, unsigned int input1<>, out unsigned int output<>)
{
	output = input0 + input1;
}

kernel void gpu_ADD_CONST(unsigned int input0<>, unsigned int input1, out unsigned int output<>)
{
	output = input0 + input1;
}

kernel void gpu_SUB(unsigned int input0<>, unsigned int input1<>, out unsigned int output<>)
{
	output = input0 - input1;
}

kernel void gpu_DIV(unsigned int input0<>, unsigned int input1<>, out unsigned int output<>)
{
	output = input0 / input1;
}

kernel void gpu_MUL(unsigned int input0<>, unsigned int input1<>, out unsigned int output<>)
{
	output = input0 * input1;
}

//Bitwise operators
kernel void gpu_NOT(unsigned int input<>, out unsigned int output<>)
{
	output = ~input;
}

kernel void gpu_OR(unsigned int input0<>, unsigned int input1<>, out unsigned int output<>)
{
	output = input0 | input1;
}

kernel void gpu_XOR_BIOP(unsigned int input0<>, unsigned int input1<>, out unsigned int output<>)
{
	output = input0 ^ input1;
}

kernel void gpu_XOR_TRIOP(unsigned int input0<>, unsigned int input1<>, unsigned int input2<>, out unsigned int output<>)
{
	output = input0 ^ input1 ^ input2;
}

kernel void gpu_AND(unsigned int input0<>, unsigned int input1<>, out unsigned int output<>)
{
	output = input0 & input1;
}

//Bit shifts
kernel void gpu_LSHIFT(unsigned int input<>, unsigned int shift, out unsigned int output<>)
{
	output = input << shift;
}

kernel void gpu_RSHIFT(unsigned int input<>, unsigned int shift, out unsigned int output<>)
{
	output = input >> shift;
}