
namespace {
	const char __gpu_ADD_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"mov r319.xy__,v0.xyzw\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r318.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"iadd r272.x___,r269.x000,r270.x000\n"
		"mov r271.x___,r272.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r324.xy__,r319.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r324.xy00\n"
		"call 20 \n"
		"mov r329.x___,r143.x000\n"
		"mov r321.x___,r329.x000\n"
		"mov r325.xy__,r319.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r330.x___,r143.x000\n"
		"mov r322.x___,r330.x000\n"
		"mov r269.x___,r321.x000\n"
		"mov r270.x___,r322.x000\n"
		"call 37 \n"
		"mov r323.x___,r271.x000\n"
		"mov r326.x___,r323.x000\n"
		"mov r327.x___,r326.x000\n"
		"mov r327._y__,l0.0x00\n"
		"mov r327.__z_,l0.00x0\n"
		"mov r327.___w,l0.000x\n"
		"mov r320.xyzw,r327.xyzw\n"
		"mov r318.xyzw,r320.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_ADD_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l13,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l14,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l15,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_cb cb0[2]\n"
		"mov r394.xy__,v0.xyzw\n"
		"mov r342.xyzw,cb0[l0.x + 0].xyzw\n"
		"mov r343.xyzw,cb0[l0.x + 1].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r393.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l0.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r408.xy__,r270.xy00\n"
		"mov r278.xy__,r408.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r409.x___,r274.y000\n"
		"imul r279.x___,r409.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r412.x___,r275.x000\n"
		"imax r410.x___,r275.x000,r412_neg(xyzw).x000\n"
		"mov r413.x___,r271.x000\n"
		"imax r411.x___,r271.x000,r413_neg(xyzw).x000\n"
		"udiv r414.x___,r410.x000,r411.x000\n"
		"inegate r415.x___,r414.x000\n"
		"ixor r416.x___,r275.x000,r271.x000\n"
		"and r416.x___,r416.x000,l5.x000\n"
		"cmov_logical r281.x___,r416.x000,r415.x000,r414.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r417.x___,r271.y000\n"
		"mov r420.x___,r276.x000\n"
		"imax r418.x___,r276.x000,r420_neg(xyzw).x000\n"
		"mov r421.x___,r417.x000\n"
		"imax r419.x___,r417.x000,r421_neg(xyzw).x000\n"
		"udiv r422.x___,r418.x000,r419.x000\n"
		"inegate r423.x___,r422.x000\n"
		"ixor r424.x___,r276.x000,r417.x000\n"
		"and r424.x___,r424.x000,l5.x000\n"
		"cmov_logical r284.x___,r424.x000,r423.x000,r422.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r425.x___,r273.z000\n"
		"mov r426.x___,r271.y000\n"
		"imul r285.x___,r425.x000,r426.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 41\n"
		"iadd r347.x___,r344.x000,r345.x000\n"
		"mov r346.x___,r347.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r394.xy00\n"
		"mov r271.xyzw,r342.xyzw\n"
		"mov r272.xyzw,r343.xyzw\n"
		"call 37 \n"
		"mov r427.xyzw,r269.xyzw\n"
		"mov r402.xyzw,r427.xyzw\n"
		"mov r397.xyzw,r402.xyzw\n"
		"mov r399.xyzw,r402.xyzw\n"
		"mov r401.xyzw,r402.xyzw\n"
		"mov r403.xy__,r394.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r403.xy00\n"
		"call 20 \n"
		"mov r428.x___,r143.x000\n"
		"mov r396.x___,r428.x000\n"
		"mov r404.xy__,r394.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r404.xy00\n"
		"call 20 \n"
		"mov r429.x___,r143.x000\n"
		"mov r398.x___,r429.x000\n"
		"mov r344.x___,r396.x000\n"
		"mov r345.x___,r398.x000\n"
		"call 41 \n"
		"mov r400.x___,r346.x000\n"
		"mov r405.x___,r400.x000\n"
		"mov r406.x___,r405.x000\n"
		"mov r406._y__,l13.0x00\n"
		"mov r406.__z_,l14.00x0\n"
		"mov r406.___w,l15.000x\n"
		"mov r395.xyzw,r406.xyzw\n"
		"mov r393.xyzw,r395.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_ADD_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_ADD_cal_desc_tech0_pass0 " )
				.image(__gpu_ADD_cal_desc_tech0_pass0)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_ADD_cal_desc_tech1_pass0 " )
				.image(__gpu_ADD_cal_desc_tech1_pass0)
				.constant(2, brook::CONST_STREAMSHAPE)
				.constant(2, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_ADD_cal = &__gpu_ADD_cal_desc;
}

namespace {
	const char __gpu_ADD_CONST_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_cb cb0[1]\n"
		"mov r321.xy__,v0.xyzw\n"
		"mov r269.x___,cb0[l0.x + 0].x000\n"
		"mov r270.xyz_,cb0[l0.x + 0].yzw0\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r320.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 38\n"
		"iadd r278.x___,r275.x000,r276.x000\n"
		"mov r277.x___,r278.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r325.xy__,r321.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r329.x___,r143.x000\n"
		"mov r323.x___,r329.x000\n"
		"mov r275.x___,r323.x000\n"
		"mov r276.x___,r269.x000\n"
		"call 38 \n"
		"mov r324.x___,r277.x000\n"
		"mov r326.x___,r324.x000\n"
		"mov r327.x___,r326.x000\n"
		"mov r327._y__,l0.0x00\n"
		"mov r327.__z_,l0.00x0\n"
		"mov r327.___w,l0.000x\n"
		"mov r322.xyzw,r327.xyzw\n"
		"mov r320.xyzw,r322.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_ADD_CONST_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l13,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_cb cb0[3]\n"
		"mov r396.xy__,v0.xyzw\n"
		"mov r342.x___,cb0[l0.x + 0].x000\n"
		"mov r343.xyz_,cb0[l0.x + 0].yzw0\n"
		"mov r344.xyzw,cb0[l0.x + 1].xyzw\n"
		"mov r345.xyzw,cb0[l0.x + 2].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r395.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l0.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r407.xy__,r270.xy00\n"
		"mov r278.xy__,r407.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r408.x___,r274.y000\n"
		"imul r279.x___,r408.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r411.x___,r275.x000\n"
		"imax r409.x___,r275.x000,r411_neg(xyzw).x000\n"
		"mov r412.x___,r271.x000\n"
		"imax r410.x___,r271.x000,r412_neg(xyzw).x000\n"
		"udiv r413.x___,r409.x000,r410.x000\n"
		"inegate r414.x___,r413.x000\n"
		"ixor r415.x___,r275.x000,r271.x000\n"
		"and r415.x___,r415.x000,l5.x000\n"
		"cmov_logical r281.x___,r415.x000,r414.x000,r413.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r416.x___,r271.y000\n"
		"mov r419.x___,r276.x000\n"
		"imax r417.x___,r276.x000,r419_neg(xyzw).x000\n"
		"mov r420.x___,r416.x000\n"
		"imax r418.x___,r416.x000,r420_neg(xyzw).x000\n"
		"udiv r421.x___,r417.x000,r418.x000\n"
		"inegate r422.x___,r421.x000\n"
		"ixor r423.x___,r276.x000,r416.x000\n"
		"and r423.x___,r423.x000,l5.x000\n"
		"cmov_logical r284.x___,r423.x000,r422.x000,r421.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r424.x___,r273.z000\n"
		"mov r425.x___,r271.y000\n"
		"imul r285.x___,r424.x000,r425.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 42\n"
		"iadd r353.x___,r350.x000,r351.x000\n"
		"mov r352.x___,r353.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r396.xy00\n"
		"mov r271.xyzw,r344.xyzw\n"
		"mov r272.xyzw,r345.xyzw\n"
		"call 37 \n"
		"mov r426.xyzw,r269.xyzw\n"
		"mov r402.xyzw,r426.xyzw\n"
		"mov r399.xyzw,r402.xyzw\n"
		"mov r401.xyzw,r402.xyzw\n"
		"mov r403.xy__,r396.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r403.xy00\n"
		"call 20 \n"
		"mov r427.x___,r143.x000\n"
		"mov r398.x___,r427.x000\n"
		"mov r350.x___,r398.x000\n"
		"mov r351.x___,r342.x000\n"
		"call 42 \n"
		"mov r400.x___,r352.x000\n"
		"mov r404.x___,r400.x000\n"
		"mov r405.x___,r404.x000\n"
		"mov r405._y__,l0.0x00\n"
		"mov r405.__z_,l13.00x0\n"
		"mov r405.___w,l0.000x\n"
		"mov r397.xyzw,r405.xyzw\n"
		"mov r395.xyzw,r397.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_ADD_CONST_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_ADD_CONST_cal_desc_tech0_pass0 " )
				.image(__gpu_ADD_CONST_cal_desc_tech0_pass0)
				.constant(1, brook::CONST_USER_PARAM)
				.input(0, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_ADD_CONST_cal_desc_tech1_pass0 " )
				.image(__gpu_ADD_CONST_cal_desc_tech1_pass0)
				.constant(1, brook::CONST_USER_PARAM)
				.constant(2, brook::CONST_STREAMSHAPE)
				.constant(2, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_ADD_CONST_cal = &__gpu_ADD_CONST_cal_desc;
}

namespace {
	const char __gpu_SUB_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"mov r319.xy__,v0.xyzw\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r318.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 39\n"
		"iadd r280.x___,r277.x000,r278_neg(xyzw).x000\n"
		"mov r279.x___,r280.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r324.xy__,r319.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r324.xy00\n"
		"call 20 \n"
		"mov r329.x___,r143.x000\n"
		"mov r321.x___,r329.x000\n"
		"mov r325.xy__,r319.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r330.x___,r143.x000\n"
		"mov r322.x___,r330.x000\n"
		"mov r277.x___,r321.x000\n"
		"mov r278.x___,r322.x000\n"
		"call 39 \n"
		"mov r323.x___,r279.x000\n"
		"mov r326.x___,r323.x000\n"
		"mov r327.x___,r326.x000\n"
		"mov r327._y__,l0.0x00\n"
		"mov r327.__z_,l0.00x0\n"
		"mov r327.___w,l0.000x\n"
		"mov r320.xyzw,r327.xyzw\n"
		"mov r318.xyzw,r320.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_SUB_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l13,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l14,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l15,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l16,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l17,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l18,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_cb cb0[2]\n"
		"mov r394.xy__,v0.xyzw\n"
		"mov r342.xyzw,cb0[l0.x + 0].xyzw\n"
		"mov r343.xyzw,cb0[l0.x + 1].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r393.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l12.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l13.00x0\n"
		"mov r277.___w,l14.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r408.xy__,r270.xy00\n"
		"mov r278.xy__,r408.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r409.x___,r274.y000\n"
		"imul r279.x___,r409.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r412.x___,r275.x000\n"
		"imax r410.x___,r275.x000,r412_neg(xyzw).x000\n"
		"mov r413.x___,r271.x000\n"
		"imax r411.x___,r271.x000,r413_neg(xyzw).x000\n"
		"udiv r414.x___,r410.x000,r411.x000\n"
		"inegate r415.x___,r414.x000\n"
		"ixor r416.x___,r275.x000,r271.x000\n"
		"and r416.x___,r416.x000,l5.x000\n"
		"cmov_logical r281.x___,r416.x000,r415.x000,r414.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r417.x___,r271.y000\n"
		"mov r420.x___,r276.x000\n"
		"imax r418.x___,r276.x000,r420_neg(xyzw).x000\n"
		"mov r421.x___,r417.x000\n"
		"imax r419.x___,r417.x000,r421_neg(xyzw).x000\n"
		"udiv r422.x___,r418.x000,r419.x000\n"
		"inegate r423.x___,r422.x000\n"
		"ixor r424.x___,r276.x000,r417.x000\n"
		"and r424.x___,r424.x000,l5.x000\n"
		"cmov_logical r284.x___,r424.x000,r423.x000,r422.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r425.x___,r273.z000\n"
		"mov r426.x___,r271.y000\n"
		"imul r285.x___,r425.x000,r426.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 43\n"
		"iadd r355.x___,r352.x000,r353_neg(xyzw).x000\n"
		"mov r354.x___,r355.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r394.xy00\n"
		"mov r271.xyzw,r342.xyzw\n"
		"mov r272.xyzw,r343.xyzw\n"
		"call 37 \n"
		"mov r427.xyzw,r269.xyzw\n"
		"mov r402.xyzw,r427.xyzw\n"
		"mov r397.xyzw,r402.xyzw\n"
		"mov r399.xyzw,r402.xyzw\n"
		"mov r401.xyzw,r402.xyzw\n"
		"mov r403.xy__,r394.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r403.xy00\n"
		"call 20 \n"
		"mov r428.x___,r143.x000\n"
		"mov r396.x___,r428.x000\n"
		"mov r404.xy__,r394.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r404.xy00\n"
		"call 20 \n"
		"mov r429.x___,r143.x000\n"
		"mov r398.x___,r429.x000\n"
		"mov r352.x___,r396.x000\n"
		"mov r353.x___,r398.x000\n"
		"call 43 \n"
		"mov r400.x___,r354.x000\n"
		"mov r405.x___,r400.x000\n"
		"mov r406.x___,r405.x000\n"
		"mov r406._y__,l16.0x00\n"
		"mov r406.__z_,l17.00x0\n"
		"mov r406.___w,l18.000x\n"
		"mov r395.xyzw,r406.xyzw\n"
		"mov r393.xyzw,r395.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_SUB_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_SUB_cal_desc_tech0_pass0 " )
				.image(__gpu_SUB_cal_desc_tech0_pass0)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_SUB_cal_desc_tech1_pass0 " )
				.image(__gpu_SUB_cal_desc_tech1_pass0)
				.constant(2, brook::CONST_STREAMSHAPE)
				.constant(2, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_SUB_cal = &__gpu_SUB_cal_desc;
}

namespace {
	const char __gpu_DIV_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"mov r319.xy__,v0.xyzw\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r318.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 40\n"
		"mov r331.x___,r281.x000\n"
		"imax r329.x___,r281.x000,r331_neg(xyzw).x000\n"
		"mov r332.x___,r282.x000\n"
		"imax r330.x___,r282.x000,r332_neg(xyzw).x000\n"
		"udiv r333.x___,r329.x000,r330.x000\n"
		"inegate r334.x___,r333.x000\n"
		"ixor r335.x___,r281.x000,r282.x000\n"
		"and r335.x___,r335.x000,l5.x000\n"
		"cmov_logical r284.x___,r335.x000,r334.x000,r333.x000\n"
		"mov r283.x___,r284.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r324.xy__,r319.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r324.xy00\n"
		"call 20 \n"
		"mov r336.x___,r143.x000\n"
		"mov r321.x___,r336.x000\n"
		"mov r325.xy__,r319.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r337.x___,r143.x000\n"
		"mov r322.x___,r337.x000\n"
		"mov r281.x___,r321.x000\n"
		"mov r282.x___,r322.x000\n"
		"call 40 \n"
		"mov r323.x___,r283.x000\n"
		"mov r326.x___,r323.x000\n"
		"mov r327.x___,r326.x000\n"
		"mov r327._y__,l0.0x00\n"
		"mov r327.__z_,l0.00x0\n"
		"mov r327.___w,l0.000x\n"
		"mov r320.xyzw,r327.xyzw\n"
		"mov r318.xyzw,r320.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_DIV_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l13,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_literal l14,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_cb cb0[2]\n"
		"mov r394.xy__,v0.xyzw\n"
		"mov r342.xyzw,cb0[l0.x + 0].xyzw\n"
		"mov r343.xyzw,cb0[l0.x + 1].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r393.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l0.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r408.xy__,r270.xy00\n"
		"mov r278.xy__,r408.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r409.x___,r274.y000\n"
		"imul r279.x___,r409.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r412.x___,r275.x000\n"
		"imax r410.x___,r275.x000,r412_neg(xyzw).x000\n"
		"mov r413.x___,r271.x000\n"
		"imax r411.x___,r271.x000,r413_neg(xyzw).x000\n"
		"udiv r414.x___,r410.x000,r411.x000\n"
		"inegate r415.x___,r414.x000\n"
		"ixor r416.x___,r275.x000,r271.x000\n"
		"and r416.x___,r416.x000,l5.x000\n"
		"cmov_logical r281.x___,r416.x000,r415.x000,r414.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r417.x___,r271.y000\n"
		"mov r420.x___,r276.x000\n"
		"imax r418.x___,r276.x000,r420_neg(xyzw).x000\n"
		"mov r421.x___,r417.x000\n"
		"imax r419.x___,r417.x000,r421_neg(xyzw).x000\n"
		"udiv r422.x___,r418.x000,r419.x000\n"
		"inegate r423.x___,r422.x000\n"
		"ixor r424.x___,r276.x000,r417.x000\n"
		"and r424.x___,r424.x000,l5.x000\n"
		"cmov_logical r284.x___,r424.x000,r423.x000,r422.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r425.x___,r273.z000\n"
		"mov r426.x___,r271.y000\n"
		"imul r285.x___,r425.x000,r426.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 44\n"
		"mov r429.x___,r356.x000\n"
		"imax r427.x___,r356.x000,r429_neg(xyzw).x000\n"
		"mov r430.x___,r357.x000\n"
		"imax r428.x___,r357.x000,r430_neg(xyzw).x000\n"
		"udiv r431.x___,r427.x000,r428.x000\n"
		"inegate r432.x___,r431.x000\n"
		"ixor r433.x___,r356.x000,r357.x000\n"
		"and r433.x___,r433.x000,l5.x000\n"
		"cmov_logical r359.x___,r433.x000,r432.x000,r431.x000\n"
		"mov r358.x___,r359.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r394.xy00\n"
		"mov r271.xyzw,r342.xyzw\n"
		"mov r272.xyzw,r343.xyzw\n"
		"call 37 \n"
		"mov r434.xyzw,r269.xyzw\n"
		"mov r402.xyzw,r434.xyzw\n"
		"mov r397.xyzw,r402.xyzw\n"
		"mov r399.xyzw,r402.xyzw\n"
		"mov r401.xyzw,r402.xyzw\n"
		"mov r403.xy__,r394.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r403.xy00\n"
		"call 20 \n"
		"mov r435.x___,r143.x000\n"
		"mov r396.x___,r435.x000\n"
		"mov r404.xy__,r394.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r404.xy00\n"
		"call 20 \n"
		"mov r436.x___,r143.x000\n"
		"mov r398.x___,r436.x000\n"
		"mov r356.x___,r396.x000\n"
		"mov r357.x___,r398.x000\n"
		"call 44 \n"
		"mov r400.x___,r358.x000\n"
		"mov r405.x___,r400.x000\n"
		"mov r406.x___,r405.x000\n"
		"mov r406._y__,l0.0x00\n"
		"mov r406.__z_,l0.00x0\n"
		"mov r406.___w,l0.000x\n"
		"mov r395.xyzw,r406.xyzw\n"
		"mov r393.xyzw,r395.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_DIV_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_DIV_cal_desc_tech0_pass0 " )
				.image(__gpu_DIV_cal_desc_tech0_pass0)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_DIV_cal_desc_tech1_pass0 " )
				.image(__gpu_DIV_cal_desc_tech1_pass0)
				.constant(2, brook::CONST_STREAMSHAPE)
				.constant(2, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_DIV_cal = &__gpu_DIV_cal_desc;
}

namespace {
	const char __gpu_MUL_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l12,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"mov r319.xy__,v0.xyzw\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r318.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 41\n"
		"imul r288.x___,r285.x000,r286.x000\n"
		"mov r287.x___,r288.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r324.xy__,r319.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r324.xy00\n"
		"call 20 \n"
		"mov r329.x___,r143.x000\n"
		"mov r321.x___,r329.x000\n"
		"mov r325.xy__,r319.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r330.x___,r143.x000\n"
		"mov r322.x___,r330.x000\n"
		"mov r285.x___,r321.x000\n"
		"mov r286.x___,r322.x000\n"
		"call 41 \n"
		"mov r323.x___,r287.x000\n"
		"mov r326.x___,r323.x000\n"
		"mov r327.x___,r326.x000\n"
		"mov r327._y__,l0.0x00\n"
		"mov r327.__z_,l12.00x0\n"
		"mov r327.___w,l0.000x\n"
		"mov r320.xyzw,r327.xyzw\n"
		"mov r318.xyzw,r320.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_MUL_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l13,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_cb cb0[2]\n"
		"mov r394.xy__,v0.xyzw\n"
		"mov r342.xyzw,cb0[l0.x + 0].xyzw\n"
		"mov r343.xyzw,cb0[l0.x + 1].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r393.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l0.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r408.xy__,r270.xy00\n"
		"mov r278.xy__,r408.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r409.x___,r274.y000\n"
		"imul r279.x___,r409.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r412.x___,r275.x000\n"
		"imax r410.x___,r275.x000,r412_neg(xyzw).x000\n"
		"mov r413.x___,r271.x000\n"
		"imax r411.x___,r271.x000,r413_neg(xyzw).x000\n"
		"udiv r414.x___,r410.x000,r411.x000\n"
		"inegate r415.x___,r414.x000\n"
		"ixor r416.x___,r275.x000,r271.x000\n"
		"and r416.x___,r416.x000,l5.x000\n"
		"cmov_logical r281.x___,r416.x000,r415.x000,r414.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r417.x___,r271.y000\n"
		"mov r420.x___,r276.x000\n"
		"imax r418.x___,r276.x000,r420_neg(xyzw).x000\n"
		"mov r421.x___,r417.x000\n"
		"imax r419.x___,r417.x000,r421_neg(xyzw).x000\n"
		"udiv r422.x___,r418.x000,r419.x000\n"
		"inegate r423.x___,r422.x000\n"
		"ixor r424.x___,r276.x000,r417.x000\n"
		"and r424.x___,r424.x000,l5.x000\n"
		"cmov_logical r284.x___,r424.x000,r423.x000,r422.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r425.x___,r273.z000\n"
		"mov r426.x___,r271.y000\n"
		"imul r285.x___,r425.x000,r426.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 45\n"
		"imul r363.x___,r360.x000,r361.x000\n"
		"mov r362.x___,r363.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r394.xy00\n"
		"mov r271.xyzw,r342.xyzw\n"
		"mov r272.xyzw,r343.xyzw\n"
		"call 37 \n"
		"mov r427.xyzw,r269.xyzw\n"
		"mov r402.xyzw,r427.xyzw\n"
		"mov r397.xyzw,r402.xyzw\n"
		"mov r399.xyzw,r402.xyzw\n"
		"mov r401.xyzw,r402.xyzw\n"
		"mov r403.xy__,r394.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r403.xy00\n"
		"call 20 \n"
		"mov r428.x___,r143.x000\n"
		"mov r396.x___,r428.x000\n"
		"mov r404.xy__,r394.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r404.xy00\n"
		"call 20 \n"
		"mov r429.x___,r143.x000\n"
		"mov r398.x___,r429.x000\n"
		"mov r360.x___,r396.x000\n"
		"mov r361.x___,r398.x000\n"
		"call 45 \n"
		"mov r400.x___,r362.x000\n"
		"mov r405.x___,r400.x000\n"
		"mov r406.x___,r405.x000\n"
		"mov r406._y__,l0.0x00\n"
		"mov r406.__z_,l0.00x0\n"
		"mov r406.___w,l13.000x\n"
		"mov r395.xyzw,r406.xyzw\n"
		"mov r393.xyzw,r395.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_MUL_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_MUL_cal_desc_tech0_pass0 " )
				.image(__gpu_MUL_cal_desc_tech0_pass0)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_MUL_cal_desc_tech1_pass0 " )
				.image(__gpu_MUL_cal_desc_tech1_pass0)
				.constant(2, brook::CONST_STREAMSHAPE)
				.constant(2, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_MUL_cal = &__gpu_MUL_cal_desc;
}

namespace {
	const char __gpu_NOT_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l12,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"mov r319.xy__,v0.xyzw\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r318.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 42\n"
		"inot r291.x___,r289.x000\n"
		"mov r290.x___,r291.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r323.xy__,r319.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r323.xy00\n"
		"call 20 \n"
		"mov r327.x___,r143.x000\n"
		"mov r321.x___,r327.x000\n"
		"mov r289.x___,r321.x000\n"
		"call 42 \n"
		"mov r322.x___,r290.x000\n"
		"mov r324.x___,r322.x000\n"
		"mov r325.x___,r324.x000\n"
		"mov r325._y__,l0.0x00\n"
		"mov r325.__z_,l0.00x0\n"
		"mov r325.___w,l12.000x\n"
		"mov r320.xyzw,r325.xyzw\n"
		"mov r318.xyzw,r320.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_NOT_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_cb cb0[2]\n"
		"mov r394.xy__,v0.xyzw\n"
		"mov r342.xyzw,cb0[l0.x + 0].xyzw\n"
		"mov r343.xyzw,cb0[l0.x + 1].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r393.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l0.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r405.xy__,r270.xy00\n"
		"mov r278.xy__,r405.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r406.x___,r274.y000\n"
		"imul r279.x___,r406.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r409.x___,r275.x000\n"
		"imax r407.x___,r275.x000,r409_neg(xyzw).x000\n"
		"mov r410.x___,r271.x000\n"
		"imax r408.x___,r271.x000,r410_neg(xyzw).x000\n"
		"udiv r411.x___,r407.x000,r408.x000\n"
		"inegate r412.x___,r411.x000\n"
		"ixor r413.x___,r275.x000,r271.x000\n"
		"and r413.x___,r413.x000,l5.x000\n"
		"cmov_logical r281.x___,r413.x000,r412.x000,r411.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r414.x___,r271.y000\n"
		"mov r417.x___,r276.x000\n"
		"imax r415.x___,r276.x000,r417_neg(xyzw).x000\n"
		"mov r418.x___,r414.x000\n"
		"imax r416.x___,r414.x000,r418_neg(xyzw).x000\n"
		"udiv r419.x___,r415.x000,r416.x000\n"
		"inegate r420.x___,r419.x000\n"
		"ixor r421.x___,r276.x000,r414.x000\n"
		"and r421.x___,r421.x000,l5.x000\n"
		"cmov_logical r284.x___,r421.x000,r420.x000,r419.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r422.x___,r273.z000\n"
		"mov r423.x___,r271.y000\n"
		"imul r285.x___,r422.x000,r423.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 46\n"
		"inot r366.x___,r364.x000\n"
		"mov r365.x___,r366.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r394.xy00\n"
		"mov r271.xyzw,r342.xyzw\n"
		"mov r272.xyzw,r343.xyzw\n"
		"call 37 \n"
		"mov r424.xyzw,r269.xyzw\n"
		"mov r400.xyzw,r424.xyzw\n"
		"mov r397.xyzw,r400.xyzw\n"
		"mov r399.xyzw,r400.xyzw\n"
		"mov r401.xy__,r394.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r401.xy00\n"
		"call 20 \n"
		"mov r425.x___,r143.x000\n"
		"mov r396.x___,r425.x000\n"
		"mov r364.x___,r396.x000\n"
		"call 46 \n"
		"mov r398.x___,r365.x000\n"
		"mov r402.x___,r398.x000\n"
		"mov r403.x___,r402.x000\n"
		"mov r403._y__,l0.0x00\n"
		"mov r403.__z_,l0.00x0\n"
		"mov r403.___w,l0.000x\n"
		"mov r395.xyzw,r403.xyzw\n"
		"mov r393.xyzw,r395.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_NOT_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_NOT_cal_desc_tech0_pass0 " )
				.image(__gpu_NOT_cal_desc_tech0_pass0)
				.input(0, 0, ACCESS_STREAM)
				.output(1, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_NOT_cal_desc_tech1_pass0 " )
				.image(__gpu_NOT_cal_desc_tech1_pass0)
				.constant(1, brook::CONST_STREAMSHAPE)
				.constant(1, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.output(1, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_NOT_cal = &__gpu_NOT_cal_desc;
}

namespace {
	const char __gpu_OR_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"mov r319.xy__,v0.xyzw\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r318.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 43\n"
		"ior r295.x___,r292.x000,r293.x000\n"
		"mov r294.x___,r295.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r324.xy__,r319.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r324.xy00\n"
		"call 20 \n"
		"mov r329.x___,r143.x000\n"
		"mov r321.x___,r329.x000\n"
		"mov r325.xy__,r319.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r330.x___,r143.x000\n"
		"mov r322.x___,r330.x000\n"
		"mov r292.x___,r321.x000\n"
		"mov r293.x___,r322.x000\n"
		"call 43 \n"
		"mov r323.x___,r294.x000\n"
		"mov r326.x___,r323.x000\n"
		"mov r327.x___,r326.x000\n"
		"mov r327._y__,l0.0x00\n"
		"mov r327.__z_,l0.00x0\n"
		"mov r327.___w,l0.000x\n"
		"mov r320.xyzw,r327.xyzw\n"
		"mov r318.xyzw,r320.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_OR_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l13,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_cb cb0[2]\n"
		"mov r394.xy__,v0.xyzw\n"
		"mov r342.xyzw,cb0[l0.x + 0].xyzw\n"
		"mov r343.xyzw,cb0[l0.x + 1].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r393.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l0.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r408.xy__,r270.xy00\n"
		"mov r278.xy__,r408.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r409.x___,r274.y000\n"
		"imul r279.x___,r409.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r412.x___,r275.x000\n"
		"imax r410.x___,r275.x000,r412_neg(xyzw).x000\n"
		"mov r413.x___,r271.x000\n"
		"imax r411.x___,r271.x000,r413_neg(xyzw).x000\n"
		"udiv r414.x___,r410.x000,r411.x000\n"
		"inegate r415.x___,r414.x000\n"
		"ixor r416.x___,r275.x000,r271.x000\n"
		"and r416.x___,r416.x000,l5.x000\n"
		"cmov_logical r281.x___,r416.x000,r415.x000,r414.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r417.x___,r271.y000\n"
		"mov r420.x___,r276.x000\n"
		"imax r418.x___,r276.x000,r420_neg(xyzw).x000\n"
		"mov r421.x___,r417.x000\n"
		"imax r419.x___,r417.x000,r421_neg(xyzw).x000\n"
		"udiv r422.x___,r418.x000,r419.x000\n"
		"inegate r423.x___,r422.x000\n"
		"ixor r424.x___,r276.x000,r417.x000\n"
		"and r424.x___,r424.x000,l5.x000\n"
		"cmov_logical r284.x___,r424.x000,r423.x000,r422.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r425.x___,r273.z000\n"
		"mov r426.x___,r271.y000\n"
		"imul r285.x___,r425.x000,r426.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 47\n"
		"ior r370.x___,r367.x000,r368.x000\n"
		"mov r369.x___,r370.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r394.xy00\n"
		"mov r271.xyzw,r342.xyzw\n"
		"mov r272.xyzw,r343.xyzw\n"
		"call 37 \n"
		"mov r427.xyzw,r269.xyzw\n"
		"mov r402.xyzw,r427.xyzw\n"
		"mov r397.xyzw,r402.xyzw\n"
		"mov r399.xyzw,r402.xyzw\n"
		"mov r401.xyzw,r402.xyzw\n"
		"mov r403.xy__,r394.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r403.xy00\n"
		"call 20 \n"
		"mov r428.x___,r143.x000\n"
		"mov r396.x___,r428.x000\n"
		"mov r404.xy__,r394.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r404.xy00\n"
		"call 20 \n"
		"mov r429.x___,r143.x000\n"
		"mov r398.x___,r429.x000\n"
		"mov r367.x___,r396.x000\n"
		"mov r368.x___,r398.x000\n"
		"call 47 \n"
		"mov r400.x___,r369.x000\n"
		"mov r405.x___,r400.x000\n"
		"mov r406.x___,r405.x000\n"
		"mov r406._y__,l13.0x00\n"
		"mov r406.__z_,l0.00x0\n"
		"mov r406.___w,l0.000x\n"
		"mov r395.xyzw,r406.xyzw\n"
		"mov r393.xyzw,r395.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_OR_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_OR_cal_desc_tech0_pass0 " )
				.image(__gpu_OR_cal_desc_tech0_pass0)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_OR_cal_desc_tech1_pass0 " )
				.image(__gpu_OR_cal_desc_tech1_pass0)
				.constant(2, brook::CONST_STREAMSHAPE)
				.constant(2, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_OR_cal = &__gpu_OR_cal_desc;
}

namespace {
	const char __gpu_XOR_BIOP_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"mov r319.xy__,v0.xyzw\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r318.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 44\n"
		"ixor r299.x___,r296.x000,r297.x000\n"
		"mov r298.x___,r299.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r324.xy__,r319.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r324.xy00\n"
		"call 20 \n"
		"mov r329.x___,r143.x000\n"
		"mov r321.x___,r329.x000\n"
		"mov r325.xy__,r319.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r330.x___,r143.x000\n"
		"mov r322.x___,r330.x000\n"
		"mov r296.x___,r321.x000\n"
		"mov r297.x___,r322.x000\n"
		"call 44 \n"
		"mov r323.x___,r298.x000\n"
		"mov r326.x___,r323.x000\n"
		"mov r327.x___,r326.x000\n"
		"mov r327._y__,l0.0x00\n"
		"mov r327.__z_,l0.00x0\n"
		"mov r327.___w,l0.000x\n"
		"mov r320.xyzw,r327.xyzw\n"
		"mov r318.xyzw,r320.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_XOR_BIOP_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l13,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_cb cb0[2]\n"
		"mov r394.xy__,v0.xyzw\n"
		"mov r342.xyzw,cb0[l0.x + 0].xyzw\n"
		"mov r343.xyzw,cb0[l0.x + 1].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r393.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l0.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r408.xy__,r270.xy00\n"
		"mov r278.xy__,r408.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r409.x___,r274.y000\n"
		"imul r279.x___,r409.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r412.x___,r275.x000\n"
		"imax r410.x___,r275.x000,r412_neg(xyzw).x000\n"
		"mov r413.x___,r271.x000\n"
		"imax r411.x___,r271.x000,r413_neg(xyzw).x000\n"
		"udiv r414.x___,r410.x000,r411.x000\n"
		"inegate r415.x___,r414.x000\n"
		"ixor r416.x___,r275.x000,r271.x000\n"
		"and r416.x___,r416.x000,l5.x000\n"
		"cmov_logical r281.x___,r416.x000,r415.x000,r414.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r417.x___,r271.y000\n"
		"mov r420.x___,r276.x000\n"
		"imax r418.x___,r276.x000,r420_neg(xyzw).x000\n"
		"mov r421.x___,r417.x000\n"
		"imax r419.x___,r417.x000,r421_neg(xyzw).x000\n"
		"udiv r422.x___,r418.x000,r419.x000\n"
		"inegate r423.x___,r422.x000\n"
		"ixor r424.x___,r276.x000,r417.x000\n"
		"and r424.x___,r424.x000,l5.x000\n"
		"cmov_logical r284.x___,r424.x000,r423.x000,r422.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r425.x___,r273.z000\n"
		"mov r426.x___,r271.y000\n"
		"imul r285.x___,r425.x000,r426.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 48\n"
		"ixor r374.x___,r371.x000,r372.x000\n"
		"mov r373.x___,r374.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r394.xy00\n"
		"mov r271.xyzw,r342.xyzw\n"
		"mov r272.xyzw,r343.xyzw\n"
		"call 37 \n"
		"mov r427.xyzw,r269.xyzw\n"
		"mov r402.xyzw,r427.xyzw\n"
		"mov r397.xyzw,r402.xyzw\n"
		"mov r399.xyzw,r402.xyzw\n"
		"mov r401.xyzw,r402.xyzw\n"
		"mov r403.xy__,r394.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r403.xy00\n"
		"call 20 \n"
		"mov r428.x___,r143.x000\n"
		"mov r396.x___,r428.x000\n"
		"mov r404.xy__,r394.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r404.xy00\n"
		"call 20 \n"
		"mov r429.x___,r143.x000\n"
		"mov r398.x___,r429.x000\n"
		"mov r371.x___,r396.x000\n"
		"mov r372.x___,r398.x000\n"
		"call 48 \n"
		"mov r400.x___,r373.x000\n"
		"mov r405.x___,r400.x000\n"
		"mov r406.x___,r405.x000\n"
		"mov r406._y__,l0.0x00\n"
		"mov r406.__z_,l0.00x0\n"
		"mov r406.___w,l13.000x\n"
		"mov r395.xyzw,r406.xyzw\n"
		"mov r393.xyzw,r395.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_XOR_BIOP_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_XOR_BIOP_cal_desc_tech0_pass0 " )
				.image(__gpu_XOR_BIOP_cal_desc_tech0_pass0)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_XOR_BIOP_cal_desc_tech1_pass0 " )
				.image(__gpu_XOR_BIOP_cal_desc_tech1_pass0)
				.constant(2, brook::CONST_STREAMSHAPE)
				.constant(2, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_XOR_BIOP_cal = &__gpu_XOR_BIOP_cal_desc;
}

namespace {
	const char __gpu_XOR_TRIOP_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(2)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l12,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l13,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"mov r319.xy__,v0.xyzw\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r318.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l11.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(2)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 45\n"
		"ixor r304.x___,r300.x000,r301.x000\n"
		"ixor r305.x___,r304.x000,r302.x000\n"
		"mov r303.x___,r305.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r325.xy__,r319.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r331.x___,r143.x000\n"
		"mov r321.x___,r331.x000\n"
		"mov r326.xy__,r319.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r326.xy00\n"
		"call 20 \n"
		"mov r332.x___,r143.x000\n"
		"mov r322.x___,r332.x000\n"
		"mov r327.xy__,r319.xy00\n"
		"mov r144.x___,l11.x000\n"
		"mov r145.xy__,r327.xy00\n"
		"call 20 \n"
		"mov r333.x___,r143.x000\n"
		"mov r323.x___,r333.x000\n"
		"mov r300.x___,r321.x000\n"
		"mov r301.x___,r322.x000\n"
		"mov r302.x___,r323.x000\n"
		"call 45 \n"
		"mov r324.x___,r303.x000\n"
		"mov r328.x___,r324.x000\n"
		"mov r329.x___,r328.x000\n"
		"mov r329._y__,l12.0x00\n"
		"mov r329.__z_,l13.00x0\n"
		"mov r329.___w,l0.000x\n"
		"mov r320.xyzw,r329.xyzw\n"
		"mov r318.xyzw,r320.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_XOR_TRIOP_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l13,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(2)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_cb cb0[2]\n"
		"mov r394.xy__,v0.xyzw\n"
		"mov r342.xyzw,cb0[l0.x + 0].xyzw\n"
		"mov r343.xyzw,cb0[l0.x + 1].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r393.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l11.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(2)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l12.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r411.xy__,r270.xy00\n"
		"mov r278.xy__,r411.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r412.x___,r274.y000\n"
		"imul r279.x___,r412.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r415.x___,r275.x000\n"
		"imax r413.x___,r275.x000,r415_neg(xyzw).x000\n"
		"mov r416.x___,r271.x000\n"
		"imax r414.x___,r271.x000,r416_neg(xyzw).x000\n"
		"udiv r417.x___,r413.x000,r414.x000\n"
		"inegate r418.x___,r417.x000\n"
		"ixor r419.x___,r275.x000,r271.x000\n"
		"and r419.x___,r419.x000,l5.x000\n"
		"cmov_logical r281.x___,r419.x000,r418.x000,r417.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r420.x___,r271.y000\n"
		"mov r423.x___,r276.x000\n"
		"imax r421.x___,r276.x000,r423_neg(xyzw).x000\n"
		"mov r424.x___,r420.x000\n"
		"imax r422.x___,r420.x000,r424_neg(xyzw).x000\n"
		"udiv r425.x___,r421.x000,r422.x000\n"
		"inegate r426.x___,r425.x000\n"
		"ixor r427.x___,r276.x000,r420.x000\n"
		"and r427.x___,r427.x000,l5.x000\n"
		"cmov_logical r284.x___,r427.x000,r426.x000,r425.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r428.x___,r273.z000\n"
		"mov r429.x___,r271.y000\n"
		"imul r285.x___,r428.x000,r429.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 49\n"
		"ixor r379.x___,r375.x000,r376.x000\n"
		"ixor r380.x___,r379.x000,r377.x000\n"
		"mov r378.x___,r380.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r394.xy00\n"
		"mov r271.xyzw,r342.xyzw\n"
		"mov r272.xyzw,r343.xyzw\n"
		"call 37 \n"
		"mov r430.xyzw,r269.xyzw\n"
		"mov r404.xyzw,r430.xyzw\n"
		"mov r397.xyzw,r404.xyzw\n"
		"mov r399.xyzw,r404.xyzw\n"
		"mov r401.xyzw,r404.xyzw\n"
		"mov r403.xyzw,r404.xyzw\n"
		"mov r405.xy__,r394.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r405.xy00\n"
		"call 20 \n"
		"mov r431.x___,r143.x000\n"
		"mov r396.x___,r431.x000\n"
		"mov r406.xy__,r394.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r406.xy00\n"
		"call 20 \n"
		"mov r432.x___,r143.x000\n"
		"mov r398.x___,r432.x000\n"
		"mov r407.xy__,r394.xy00\n"
		"mov r144.x___,l11.x000\n"
		"mov r145.xy__,r407.xy00\n"
		"call 20 \n"
		"mov r433.x___,r143.x000\n"
		"mov r400.x___,r433.x000\n"
		"mov r375.x___,r396.x000\n"
		"mov r376.x___,r398.x000\n"
		"mov r377.x___,r400.x000\n"
		"call 49 \n"
		"mov r402.x___,r378.x000\n"
		"mov r408.x___,r402.x000\n"
		"mov r409.x___,r408.x000\n"
		"mov r409._y__,l12.0x00\n"
		"mov r409.__z_,l0.00x0\n"
		"mov r409.___w,l0.000x\n"
		"mov r395.xyzw,r409.xyzw\n"
		"mov r393.xyzw,r395.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_XOR_TRIOP_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_XOR_TRIOP_cal_desc_tech0_pass0 " )
				.image(__gpu_XOR_TRIOP_cal_desc_tech0_pass0)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.input(2, 0, ACCESS_STREAM)
				.output(3, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_XOR_TRIOP_cal_desc_tech1_pass0 " )
				.image(__gpu_XOR_TRIOP_cal_desc_tech1_pass0)
				.constant(3, brook::CONST_STREAMSHAPE)
				.constant(3, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.input(2, 0, ACCESS_STREAM)
				.output(3, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_XOR_TRIOP_cal = &__gpu_XOR_TRIOP_cal_desc;
}

namespace {
	const char __gpu_AND_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l12,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"mov r319.xy__,v0.xyzw\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r318.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 46\n"
		"and r309.x___,r306.x000,r307.x000\n"
		"mov r308.x___,r309.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r324.xy__,r319.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r324.xy00\n"
		"call 20 \n"
		"mov r329.x___,r143.x000\n"
		"mov r321.x___,r329.x000\n"
		"mov r325.xy__,r319.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r330.x___,r143.x000\n"
		"mov r322.x___,r330.x000\n"
		"mov r306.x___,r321.x000\n"
		"mov r307.x___,r322.x000\n"
		"call 46 \n"
		"mov r323.x___,r308.x000\n"
		"mov r326.x___,r323.x000\n"
		"mov r327.x___,r326.x000\n"
		"mov r327._y__,l0.0x00\n"
		"mov r327.__z_,l12.00x0\n"
		"mov r327.___w,l0.000x\n"
		"mov r320.xyzw,r327.xyzw\n"
		"mov r318.xyzw,r320.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_AND_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l13,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l14,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l15,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l16,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l17,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l18,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l19,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l20,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_literal l21,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_literal l22,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l23,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_resource_id(1)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l24,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_cb cb0[2]\n"
		"mov r394.xy__,v0.xyzw\n"
		"mov r342.xyzw,cb0[l0.x + 0].xyzw\n"
		"mov r343.xyzw,cb0[l0.x + 1].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r393.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"ieq r0.x___,r144.x000,l1.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(1)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l12.x000\n"
		"mov r277._y__,l13.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l14.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r408.xy__,r270.xy00\n"
		"mov r278.xy__,r408.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r409.x___,r274.y000\n"
		"imul r279.x___,r409.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r412.x___,r275.x000\n"
		"imax r410.x___,r275.x000,r412_neg(xyzw).x000\n"
		"mov r413.x___,r271.x000\n"
		"imax r411.x___,r271.x000,r413_neg(xyzw).x000\n"
		"udiv r414.x___,r410.x000,r411.x000\n"
		"inegate r415.x___,r414.x000\n"
		"ixor r416.x___,r275.x000,r271.x000\n"
		"and r416.x___,r416.x000,l5.x000\n"
		"cmov_logical r281.x___,r416.x000,r415.x000,r414.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r417.x___,r271.y000\n"
		"mov r420.x___,r276.x000\n"
		"imax r418.x___,r276.x000,r420_neg(xyzw).x000\n"
		"mov r421.x___,r417.x000\n"
		"imax r419.x___,r417.x000,r421_neg(xyzw).x000\n"
		"udiv r422.x___,r418.x000,r419.x000\n"
		"inegate r423.x___,r422.x000\n"
		"ixor r424.x___,r276.x000,r417.x000\n"
		"and r424.x___,r424.x000,l5.x000\n"
		"cmov_logical r284.x___,r424.x000,r423.x000,r422.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r425.x___,r273.z000\n"
		"mov r426.x___,r271.y000\n"
		"imul r285.x___,r425.x000,r426.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 50\n"
		"and r384.x___,r381.x000,r382.x000\n"
		"mov r383.x___,r384.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r394.xy00\n"
		"mov r271.xyzw,r342.xyzw\n"
		"mov r272.xyzw,r343.xyzw\n"
		"call 37 \n"
		"mov r427.xyzw,r269.xyzw\n"
		"mov r402.xyzw,r427.xyzw\n"
		"mov r397.xyzw,r402.xyzw\n"
		"mov r399.xyzw,r402.xyzw\n"
		"mov r401.xyzw,r402.xyzw\n"
		"mov r403.xy__,r394.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r403.xy00\n"
		"call 20 \n"
		"mov r428.x___,r143.x000\n"
		"mov r396.x___,r428.x000\n"
		"mov r404.xy__,r394.xy00\n"
		"mov r144.x___,l1.x000\n"
		"mov r145.xy__,r404.xy00\n"
		"call 20 \n"
		"mov r429.x___,r143.x000\n"
		"mov r398.x___,r429.x000\n"
		"mov r381.x___,r396.x000\n"
		"mov r382.x___,r398.x000\n"
		"call 50 \n"
		"mov r400.x___,r383.x000\n"
		"mov r405.x___,r400.x000\n"
		"mov r406.x___,r405.x000\n"
		"mov r406._y__,l0.0x00\n"
		"mov r406.__z_,l0.00x0\n"
		"mov r406.___w,l24.000x\n"
		"mov r395.xyzw,r406.xyzw\n"
		"mov r393.xyzw,r395.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_AND_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_AND_cal_desc_tech0_pass0 " )
				.image(__gpu_AND_cal_desc_tech0_pass0)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_AND_cal_desc_tech1_pass0 " )
				.image(__gpu_AND_cal_desc_tech1_pass0)
				.constant(2, brook::CONST_STREAMSHAPE)
				.constant(2, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.input(1, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_AND_cal = &__gpu_AND_cal_desc;
}

namespace {
	const char __gpu_LSHIFT_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_cb cb0[1]\n"
		"mov r321.xy__,v0.xyzw\n"
		"mov r269.x___,cb0[l0.x + 0].x000\n"
		"mov r270.xyz_,cb0[l0.x + 0].yzw0\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r320.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 47\n"
		"ishl r315.x___,r312.x000,r313.x000\n"
		"mov r314.x___,r315.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r325.xy__,r321.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r329.x___,r143.x000\n"
		"mov r323.x___,r329.x000\n"
		"mov r312.x___,r323.x000\n"
		"mov r313.x___,r269.x000\n"
		"call 47 \n"
		"mov r324.x___,r314.x000\n"
		"mov r326.x___,r324.x000\n"
		"mov r327.x___,r326.x000\n"
		"mov r327._y__,l0.0x00\n"
		"mov r327.__z_,l0.00x0\n"
		"mov r327.___w,l0.000x\n"
		"mov r322.xyzw,r327.xyzw\n"
		"mov r320.xyzw,r322.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_LSHIFT_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l13,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_cb cb0[3]\n"
		"mov r396.xy__,v0.xyzw\n"
		"mov r342.x___,cb0[l0.x + 0].x000\n"
		"mov r343.xyz_,cb0[l0.x + 0].yzw0\n"
		"mov r344.xyzw,cb0[l0.x + 1].xyzw\n"
		"mov r345.xyzw,cb0[l0.x + 2].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r395.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l0.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r407.xy__,r270.xy00\n"
		"mov r278.xy__,r407.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r408.x___,r274.y000\n"
		"imul r279.x___,r408.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r411.x___,r275.x000\n"
		"imax r409.x___,r275.x000,r411_neg(xyzw).x000\n"
		"mov r412.x___,r271.x000\n"
		"imax r410.x___,r271.x000,r412_neg(xyzw).x000\n"
		"udiv r413.x___,r409.x000,r410.x000\n"
		"inegate r414.x___,r413.x000\n"
		"ixor r415.x___,r275.x000,r271.x000\n"
		"and r415.x___,r415.x000,l5.x000\n"
		"cmov_logical r281.x___,r415.x000,r414.x000,r413.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r416.x___,r271.y000\n"
		"mov r419.x___,r276.x000\n"
		"imax r417.x___,r276.x000,r419_neg(xyzw).x000\n"
		"mov r420.x___,r416.x000\n"
		"imax r418.x___,r416.x000,r420_neg(xyzw).x000\n"
		"udiv r421.x___,r417.x000,r418.x000\n"
		"inegate r422.x___,r421.x000\n"
		"ixor r423.x___,r276.x000,r416.x000\n"
		"and r423.x___,r423.x000,l5.x000\n"
		"cmov_logical r284.x___,r423.x000,r422.x000,r421.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r424.x___,r273.z000\n"
		"mov r425.x___,r271.y000\n"
		"imul r285.x___,r424.x000,r425.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 51\n"
		"ishl r390.x___,r387.x000,r388.x000\n"
		"mov r389.x___,r390.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r396.xy00\n"
		"mov r271.xyzw,r344.xyzw\n"
		"mov r272.xyzw,r345.xyzw\n"
		"call 37 \n"
		"mov r426.xyzw,r269.xyzw\n"
		"mov r402.xyzw,r426.xyzw\n"
		"mov r399.xyzw,r402.xyzw\n"
		"mov r401.xyzw,r402.xyzw\n"
		"mov r403.xy__,r396.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r403.xy00\n"
		"call 20 \n"
		"mov r427.x___,r143.x000\n"
		"mov r398.x___,r427.x000\n"
		"mov r387.x___,r398.x000\n"
		"mov r388.x___,r342.x000\n"
		"call 51 \n"
		"mov r400.x___,r389.x000\n"
		"mov r404.x___,r400.x000\n"
		"mov r405.x___,r404.x000\n"
		"mov r405._y__,l0.0x00\n"
		"mov r405.__z_,l0.00x0\n"
		"mov r405.___w,l13.000x\n"
		"mov r397.xyzw,r405.xyzw\n"
		"mov r395.xyzw,r397.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_LSHIFT_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_LSHIFT_cal_desc_tech0_pass0 " )
				.image(__gpu_LSHIFT_cal_desc_tech0_pass0)
				.constant(1, brook::CONST_USER_PARAM)
				.input(0, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_LSHIFT_cal_desc_tech1_pass0 " )
				.image(__gpu_LSHIFT_cal_desc_tech1_pass0)
				.constant(1, brook::CONST_USER_PARAM)
				.constant(2, brook::CONST_STREAMSHAPE)
				.constant(2, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_LSHIFT_cal = &__gpu_LSHIFT_cal_desc;
}

namespace {
	const char __gpu_RSHIFT_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_cb cb0[1]\n"
		"mov r321.xy__,v0.xyzw\n"
		"mov r269.x___,cb0[l0.x + 0].x000\n"
		"mov r270.xyz_,cb0[l0.x + 0].yzw0\n"
		"call 49 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r320.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 48\n"
		"ishr r319.x___,r316.x000,r317.x000\n"
		"mov r318.x___,r319.x000\n"
		"ret\n"
		"\n"
		"func 49\n"
		"mov r325.xy__,r321.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r325.xy00\n"
		"call 20 \n"
		"mov r329.x___,r143.x000\n"
		"mov r323.x___,r329.x000\n"
		"mov r316.x___,r323.x000\n"
		"mov r317.x___,r269.x000\n"
		"call 48 \n"
		"mov r324.x___,r318.x000\n"
		"mov r326.x___,r324.x000\n"
		"mov r327.x___,r326.x000\n"
		"mov r327._y__,l0.0x00\n"
		"mov r327.__z_,l0.00x0\n"
		"mov r327.___w,l0.000x\n"
		"mov r322.xyzw,r327.xyzw\n"
		"mov r320.xyzw,r322.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __gpu_RSHIFT_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_cb cb0[3]\n"
		"mov r396.xy__,v0.xyzw\n"
		"mov r342.x___,cb0[l0.x + 0].x000\n"
		"mov r343.xyz_,cb0[l0.x + 0].yzw0\n"
		"mov r344.xyzw,cb0[l0.x + 1].xyzw\n"
		"mov r345.xyzw,cb0[l0.x + 2].xyzw\n"
		"call 53 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r395.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l0.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r407.xy__,r270.xy00\n"
		"mov r278.xy__,r407.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r408.x___,r274.y000\n"
		"imul r279.x___,r408.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r411.x___,r275.x000\n"
		"imax r409.x___,r275.x000,r411_neg(xyzw).x000\n"
		"mov r412.x___,r271.x000\n"
		"imax r410.x___,r271.x000,r412_neg(xyzw).x000\n"
		"udiv r413.x___,r409.x000,r410.x000\n"
		"inegate r414.x___,r413.x000\n"
		"ixor r415.x___,r275.x000,r271.x000\n"
		"and r415.x___,r415.x000,l5.x000\n"
		"cmov_logical r281.x___,r415.x000,r414.x000,r413.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r416.x___,r271.y000\n"
		"mov r419.x___,r276.x000\n"
		"imax r417.x___,r276.x000,r419_neg(xyzw).x000\n"
		"mov r420.x___,r416.x000\n"
		"imax r418.x___,r416.x000,r420_neg(xyzw).x000\n"
		"udiv r421.x___,r417.x000,r418.x000\n"
		"inegate r422.x___,r421.x000\n"
		"ixor r423.x___,r276.x000,r416.x000\n"
		"and r423.x___,r423.x000,l5.x000\n"
		"cmov_logical r284.x___,r423.x000,r422.x000,r421.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r424.x___,r273.z000\n"
		"mov r425.x___,r271.y000\n"
		"imul r285.x___,r424.x000,r425.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 52\n"
		"ishr r394.x___,r391.x000,r392.x000\n"
		"mov r393.x___,r394.x000\n"
		"ret\n"
		"\n"
		"func 53\n"
		"mov r270.xy__,r396.xy00\n"
		"mov r271.xyzw,r344.xyzw\n"
		"mov r272.xyzw,r345.xyzw\n"
		"call 37 \n"
		"mov r426.xyzw,r269.xyzw\n"
		"mov r402.xyzw,r426.xyzw\n"
		"mov r399.xyzw,r402.xyzw\n"
		"mov r401.xyzw,r402.xyzw\n"
		"mov r403.xy__,r396.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r403.xy00\n"
		"call 20 \n"
		"mov r427.x___,r143.x000\n"
		"mov r398.x___,r427.x000\n"
		"mov r391.x___,r398.x000\n"
		"mov r392.x___,r342.x000\n"
		"call 52 \n"
		"mov r400.x___,r393.x000\n"
		"mov r404.x___,r400.x000\n"
		"mov r405.x___,r404.x000\n"
		"mov r405._y__,l0.0x00\n"
		"mov r405.__z_,l0.00x0\n"
		"mov r405.___w,l0.000x\n"
		"mov r397.xyzw,r405.xyzw\n"
		"mov r395.xyzw,r397.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __gpu_RSHIFT_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__gpu_RSHIFT_cal_desc_tech0_pass0 " )
				.image(__gpu_RSHIFT_cal_desc_tech0_pass0)
				.constant(1, brook::CONST_USER_PARAM)
				.input(0, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__gpu_RSHIFT_cal_desc_tech1_pass0 " )
				.image(__gpu_RSHIFT_cal_desc_tech1_pass0)
				.constant(1, brook::CONST_USER_PARAM)
				.constant(2, brook::CONST_STREAMSHAPE)
				.constant(2, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.output(2, 0, ACCESS_STREAM)
			)
		);
	static const void* __gpu_RSHIFT_cal = &__gpu_RSHIFT_cal_desc;
}
